name: 'test'

on: [workflow_dispatch]
  # push:
  #   branches: [ "main" ]
  # pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  Deploy_APIM:
    name: 'Deploy_APIM'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: /

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
      
          
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      env:
        test: ${{ vars.TEST }}
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      env:
        test: ${{ vars.TEST }}
      run: terraform plan -out "tfplan" -input=false
    
    - name: Terraform Apply
      env:
        test: ${{ vars.TEST }}
      run: terraform apply -auto-approve -input=false "tfplan"
